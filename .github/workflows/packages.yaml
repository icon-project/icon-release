on:
  push:
    branches: [ feature/* ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    env:
      BUILD_DIR: out
      PACKAGE_ASSET: packages.tar.gz

    steps:
      - name: Checkout release
        uses: actions/checkout@v2
      - name: checkout loopchain
        uses: actions/checkout@v2
        with:
          repository: icon-project/loopchain
          ref: 2.6.0rc1
          path: loopchain
      - name: Checkout iconrpcserver
        uses: actions/checkout@v2
        with:
          repository: icon-project/icon-rpc-server
          ref: 1.5.0rc1
          path: icon-rpc-server
      - name: Checkout iconservice
        uses: actions/checkout@v2
        with:
          repository: icon-project/icon-service
          ref: feature/build-package
          path: icon-service
      - name: Checkout reward calculator
        uses: actions/checkout@v2
        with:
          repository: icon-project/rewardcalculator
          ref: 1.2.2
          path: rewardcalculator
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Workflow check
        run: |
          echo $PWD
          ls -al
      - name: Build packages
        run: |
          python -m pip install --upgrade pip
          make
          mkdir ./$BUILD_DIR
          for dir in loopchain icon-rpc-server icon-service; do \
            cp $dir/dist/*.whl ./$BUILD_DIR; \
          done
          echo $PWD/$BUILD_DIR
          make -C rewardcalculator install DST_DIR=$PWD/$BUILD_DIR
          ls -al ./$BUILD_DIR
      - name: Check build result
        run: |
          ls -al ./$BUILD_DIR
          tar czf $PACKAGE_ASSET $BUILD_DIR/*.whl $BUILD_DIR/icon_rc
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./${{ env.PACKAGE_ASSET }}
          asset_name: ${{ env.PACKAGE_ASSET }}
          asset_content_type: application/gzip

#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install pytest
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#      - name: Test with pytest
#        run: |
#          pytest